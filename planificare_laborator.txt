L1 terminal, configurare compilator, recapitulare C, 30 min (?), intro OOP
L2 configurare git, Code::Blocks, intro OOP
L3 configurare CLion, cerințe tema 1
L4 recapitulare cerințe tema 1, depanare/ajutor teme
L5 moșteniri
L6 excepții, id const static
L7 recapitulare cerințe tema 2, depanare teme
L8 SOLID, design patterns
L9 depanare teme (săpt cu 1 Decembrie 2022/săpt cu Paștele 2023)
L10 rezolvare parțială colocviu + discuții, depanare teme
L11 templates
L12 depanare
L13 depanare/subiecte de examen
L14 subiecte de examen

De folosit utilitarul `script`.

Observațîe esențială! Repository-ul template folosește warnings as errors, dar pentru examen warnings nu contează, deci codul ar compila în acele situații.

Din explicațiile din laboratoare (în special t2), săriți peste ce nu înțelegeți și reluațî ulterior.

Nu vă bazați doar pe prezența de la curs/seminar/laborator. Simpla prezență nu este suficientă pentru promovare. Exersați pe cont propriu!

Din feedback (de găsit la ce laboratoare să le discutăm):
- atenționare mai din timp referitor la promovarea laboratorului
  - nu știu ce să zic... nu este un semnal de alarmă faptul că la mai puțin de o lună până la încheierea semestrului nu ați primit nota pe prima temă?
  - am făcut scrisul mai mare :) o să încerc să vă atenționez de mai multe ori...
- exemple concrete la moșteniri (de văzut dacă s-a rezolvat cu t2)
  - rezolvarea unui colocviu pentru înțelegerea moștenirilor:
    - nu sunt de acord să vin eu cu subiect de colocviu, așa e totul pe tavă
    - în cadrul laboratorului vom rezolva parțial un singur subiect de colocviu (pe care îl alegeți voi; eu nu am subiecte); consider pierdere de timp să rezolvăm complet un subiect sau mai multe subiecte în orele de laborator
    - propunerea mea este să încercați voi să le rezolvați și discutăm pe marginea rezolvărilor
- dificultăți în alegerea temelor (rezolvat cu temă separată pt t1? am scris deja în cel puțin 2 locuri, dar am mai pus links către teme din ani anteriori)
- funcții și variabile `const` (am scris în cerințe cât mai multe `const`-uri și semnalează și cppcheck, but oh well)
- pointeri simpli (acoperiți de t2??) și referințe
  - transmiterea parametrilor prin pointeri/refs const
  - conversii:
    - const int -> int
    - int -> int&
    - int -> int* (de ce am avea nevoie de o astfel de conversie? este cel mai probabil bug, primim și warning... de ce sunt subiecte de examen cu așa ceva? nu știu, nu eu le-am făcut...)
    - problema este că regulile de conversie implicită sunt foaaaaarte complicate: de aceea trebuie lucrat (foarte) mult pe cont propriu
    - de preluat de aici: https://github.com/mcmarius/pong-plus-plus/blob/443a29a72e5746c210165cb192385b44c48694f4/main.cpp#L140-L178
    - la templates: pe scurt, nu se fac deloc conversii
- tba
